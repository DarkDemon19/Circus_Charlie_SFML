@startuml FlappyBird 



class Videojuego{
    +Ventana()
}

class Bird{
    -bool vida
    -bool inciado
    -int estado
    -int relojEstado
    -estados
    -sprite
    -float mover

    +Bird(int, int)
    +void Actualizar()
    +void Saltar()
    +void Muerte()
    +bool ObtenerVida()
    +Obtenerposicion()
    +void Inciado()
    +virtual void draw(RenderTarget, RenderStates)
}

class Choques
{
    -spriteSuperior
    -spriteInferior

    +Choques(sf::Texture,int,int)
    +void Actualizar()
    +bool Colision(sf::IntRect)
    +GetPosicion()
    +virtual void draw(RenderTarget, RenderStates)

}

class Variacion_de_posicion
{
    -int ultimo
    -int puntaje
    -bool inciado
    -obstaculoT
    -baseT
    -bases
    -obstaculos
    -int posicionUltimoObstaculoPasado

    +Variacion_de_posicion()
    +void Actualizar()
    +bool Colision(sf::IntRect)
    +void Inciado()
    +int Puntaje();
    +virtual void draw(RenderTarget, RenderStates)
}

class Audio
{
    -puntosBird
    -golpeBird
    -aleteoBird
    -punto
    -aleteo
    -golpe
    -musica
    -fuente
    -maxPuntajeT
    -puntajeT
    -int maxPuntaje
    -int puntaje
    -bool incializado,gameOver
    -gameOverT
    -gameOverS
    -inicializadoTextura
    -inicializadoSprite

    +Audio()
    +void DefinirPuntaje(int)
    +void Incializado(bool)
    +void GameOver()
    +void Aleteo()
    +virtual void draw(RenderTarget, RenderStates)
}

Videojuego "1" *--  "1" Bird
Videojuego "1" *-- "*" Choques 
Videojuego "1" <-- "1" Variacion_de_posicion
Videojuego "1" *-- "4" Audio
Variacion_de_posicion "1" <-- "*" Choques


@enduml 